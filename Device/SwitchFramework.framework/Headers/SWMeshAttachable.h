//
//  SWMeshAttachable.h
//  SwitchFramework
//
//  Created by Kyle Gonzalez on 2/7/17.
//  Copyright Â© 2017 Tony Cheng. All rights reserved.
//

#ifndef SWMeshAttachable_h
#define SWMeshAttachable_h


#endif /* SWMeshAttachable_h */

#import "SWAttachable.h"
#import "SWTrackingModel.h"
#import <SceneKit/SceneKit.h>
#import <SpriteKit/SpriteKit.h>

@class MyTextureAtlas;

@interface SWMeshAttachable : SWAttachable

@property (nonatomic, strong) SCNNode *rootNode;

/*!
 * scale
 * the original scale of the node, as loaded from scenekit
 */
@property (nonatomic) CGFloat scale;

/*!
 * currentScale
 * the current scale of the node. This is applied on top of the original scale
 */
@property (nonatomic) CGFloat currentScale;

/*!
 * textureSequence
 * array of images to update the node over time.
 */
@property (nonatomic, strong) NSArray<UIImage *> *textureSequence;

/*!
 * textureAtlas
 * texture atlas to update the node over time.
 */
@property (nonatomic, strong) MyTextureAtlas *textureAtlas;

/*!
 * objSequence
 * an array of objs that the sticker will cycle through as time updates. Can contain one object
 */
@property (nonatomic, strong) NSArray<SCNNode *> *nodeSequence;

/*!
 * currentOBJNode
 * the current node being displayed. Will be one of the nodes in objSequence, or nil if objSequence is empty.
 */
@property (nonatomic, strong) SCNNode *currentOBJNode;

/*!
 * currentImage
 * the current image being displayed. Will be one of the images in textureSequence, or nil if textureSequence is empty.
 */
@property (nonatomic, strong) UIImage *currentImage;

/*!
 * fps
 * the frame rate of the sequences. Defaults to 0
 */
@property (nonatomic) float fps;

/*!
 * isUpdatingTextureWithTrackedFace
 * if true, then the node will update the texture based on the patch generated by the tracking engine
 */
@property (nonatomic) BOOL isUpdatingTextureWithTrackedFace;

/*!
 * lightningModel
 * the SCNLightningModel to light the underlying node.
 */
@property (nonatomic) SCNLightingModel lightingModel;

/*!
 * calls the internal updateTexture and node
 */
- (void)updateWithTime:(float)time;

/*!
 * @brief updates the textures in textureSequence given the time variable
 * @param time
 */
- (void)updateTextureWithTime:(float)time;

/*!
 * @brief updates texture with the given image and tracked points (to track a face onto a separate mesh)
 * @param image
 * @param vector
 * @param nVertices
 */
- (void)updateTextureWithImage:(UIImage *)image trackedPoints:(SCNVector3 *)vector vertices:(int)nVertices;

/*!
 * load MDLAsset objs from the provided paths. The attachable will cycle through each obj at each tick, according to the fps
 * @param paths
 */
- (void)loadObjsAtPaths:(NSArray <NSString *> *)paths;

/*!
 * loads UIImages from the provided paths. The attachable will cycle through each UIImage at each tick, according to the fps
 * @param paths
 */
- (void)loadImagesAtPaths:(NSArray <NSString *> *)paths;

@end
